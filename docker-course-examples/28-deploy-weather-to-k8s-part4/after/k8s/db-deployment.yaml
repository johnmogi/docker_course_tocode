apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose-k8s.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env-k8s-env
            - name: POSTGRES_PASSWORD_FILE
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD_FILE
                  name: env-k8s-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env-k8s-env
            - name: WEATHER_API_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  key: WEATHER_API_KEY_FILE
                  name: env-k8s-env
          image: ynonp/deploy-weather-to-k8s-db:1.0
          name: db
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /run/secrets/postgres-passwd
              name: postgres-passwd
            - mountPath: /var/lib/postgresql/data
              subPath: pgdata
              name: pgdata
      restartPolicy: Always
      volumes:
        - name: postgres-passwd
          secret:
            items:
              - key: postgres-passwd
                path: postgres-passwd
            secretName: postgres-passwd
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
status: {}
